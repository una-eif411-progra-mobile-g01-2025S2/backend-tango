spring.application.name=PAI Backend

# Datasource desde ENV (Render)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true

# Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=public
spring.flyway.create-schemas=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.web.base-path=/actuator

# OpenRouter (mover a ENV en Render)
openrouter.api.key=${OPENROUTER_API_KEY:}
openrouter.api.url=https://openrouter.ai/api/v1/chat/completions
openrouter.model=tngtech/deepseek-r1t2-chimera:free

# Render asigna el puerto a través de la variable PORT
server.port=${PORT:8080}
server.address=0.0.0.0

# URLs de endpoints públicos
url.user.signup=${URL_USER_SIGNUP:/api/v1/users/signup}

# Orígenes permitidos para CORS (separados por coma)
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
spring.web.cors.allowed-origins=${cors.allowed-origins}

# URL base pública del backend (para cabeceras informativas)
app.base-url=${APP_BASE_URL:http://localhost:8080}

# Configuración de rutas públicas y endpoints API
api.base-path=${API_BASE_PATH:/api/v1}
api.endpoints.ping=${API_ENDPOINTS_PING:${api.base-path}/ping}
api.endpoints.users=${API_ENDPOINTS_USERS:${api.base-path}/users}
api.endpoints.tasks=${API_ENDPOINTS_TASKS:${api.base-path}/tasks}
api.endpoints.subjects=${API_ENDPOINTS_SUBJECTS:${api.base-path}/subjects}
api.endpoints.periods=${API_ENDPOINTS_PERIODS:${api.base-path}/periods}
api.endpoints.study-blocks=${API_ENDPOINTS_STUDY_BLOCKS:${api.base-path}/study-blocks}
api.endpoints.roles=${API_ENDPOINTS_ROLES:${api.base-path}/roles}
api.endpoints.calendar=${API_ENDPOINTS_CALENDAR:${api.base-path}/calendar}
api.endpoints.auth=${API_ENDPOINTS_AUTH:${api.base-path}/auth}

# Configuración JWT
security.jwt.secret=${SECURITY_JWT_SECRET:VGVzdFNlY3JldEtleUZvclBBSS0xMjM0NTY3ODkwMTIzNDU2Nzg5MDE=}
security.jwt.issuer=${SECURITY_JWT_ISSUER:PAI Backend}
security.jwt.access-token-ttl=${SECURITY_JWT_ACCESS_TTL:PT15M}
security.jwt.refresh-token-ttl=${SECURITY_JWT_REFRESH_TTL:P7D}
